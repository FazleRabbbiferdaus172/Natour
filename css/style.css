/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

/* resetStart */
*,*::after, *::before {
    margin: 0px;
    padding: 0;
    box-sizing: inherit; /* every element now inherits from the body box-size $$BEST PRACTICE$$ */
}

html {
    font-size: 62.5%;
}

body {
    font-family: "Lato", sans-serif;
    font-weight: 400;
    font-size: 1.6rem;
    line-height: 1.7;
    color: #777;
    padding: 3.0rem;

    box-sizing: border-box; /*go yo *,*::after, *::before box-sizing to know why it is done this way */
}

/* resetEnd */

.header {
    height: 95vh;
    background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 131, 0.8)), url(../img/hero.jpg);
    background-size: cover;
    background-position: top;
    position: relative;
    clip-path: polygon(0 0, 100% 0 , 100% 75vh, 0 100%);
}

.header__logo-box{
    position: absolute;
    top: 4.0rem;
    left: 4.0rem;
}

.header__logo{
    height: 3.5rem;
}

.header__logo:hover{
    animation: barrelRoll 1s;
}

.header__text-box{
    /* thisIsHowYouCenterADivStart */
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%); 
    /* thisIsHowYouCenterADivEnd */
    text-align: center; /* inline-block elements are treated as text, so it will center any inline-block element*/
}

.heading-primary{
    color: #fff;
    text-transform: uppercase;

    backface-visibility: hidden;  /* If you don't want any shaking in text */
    margin-bottom: 6.0rem;
}

.heading-primary--main{
    display: block;
    font-size: 6.0rem;
    font-weight: 400;
    letter-spacing: 3.5rem;

    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out;
}

.heading-primary--sub{
    display: block;
    font-size: 2.0rem;
    font-size: 700;
    letter-spacing: 1.75rem;

    animation: moveInRight 1s ease-out;
}

@keyframes moveInLeft {
    0% {
        opacity: 0;
        transform: translateX(-10.0rem);
    }

    80% {
        transform: translateX(1.0rem);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

@keyframes moveInRight {
    0% {
        opacity: 0;
        transform: translateX(10.0rem);
    }

    80% {
        transform: translateX(-1.0rem);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

@keyframes barrelRoll {
    0% {
        transform: rotate(0deg);
    }
    100% {
        transform: rotate(360deg);
    }
}


@keyframes moveInButtom {
    0% {
        transform: translateY(5.0rem);
        opacity: 0;
    }
    100% {
        transform: translateY(0rem);
        opacity: 1;
    }
}

.btn:link, .btn:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4.0rem;
    display: inline-block;
    border-radius: 10.0rem;
    transition: all .2s;
    position: relative; /* find the reason in btn::after */
    font-size: 1.6rem;
}

.btn:hover {
    transform: translateY(-.3rem);
    box-shadow: 0 1.0rem 2.0rem rgba(0, 0, 0, .2);
}

.btn:active {
    transform: translateY(-.1rem);
    box-shadow: 0 .5rem 1.0rem rgba(0, 0, 0, .2);
}

.btn--white {
    background-color: #fff;
    color: #777;
}

.btn::after {
    content: ""; /*this is a must for it to work*/
    display: inline-block; /*this is a must for it to work*/
    height: 100%; /*after psudoelement is treated as the child of the element that is why 100% means 100% of that element*/
    width: 100%;
    border-radius: 10.0rem;
    position: absolute; /* this always needs relative positioning so it trys to find a element that has position: relative so we set the button position to relative */
    top: 0;
    left: 0;
    z-index: -1;
    transition: all .4s;
}

.btn--white::after {
    background-color: white;
    
}

.btn:hover::after {
    transform: scaleX(1.4) scaleY(1.6);
    opacity: 0;
}

.btn--animated {
    animation: moveInButtom .5s ease-out .25s;
    animation-fill-mode: backwards; /* it uses 0% as the initial state without this, the button will be visible at first, try removeing it and see what happens */
}